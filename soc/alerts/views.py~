from django.shortcuts import render
from django.http import HttpResponse, HttpResponseRedirect
from django.conf import settings
from forms import *
from django.contrib.auth.models import User
from urllib2 import urlopen
from json import load, dumps
from models import *
from serializers import *
from rest_framework.renderers import JSONRenderer
from rest_framework.parsers import JSONParser
from rest_framework.decorators import api_view
from rest_framework.response import Response

global alert
alert = ""

class JSONResponse(HttpResponse):
    def __init__(self, data, **kwargs):
        content = JSONRenderer().render(data)
        kwargs['content_type'] = 'application/json'
        super(JSONResponse, self).__init__(content, **kwargs)

def home(request):
	if request.method == 'GET':
		return render(request, "home.html", {'form':LoginForm()})
	elif request.method == 'POST':
		u = User.objects.get(username=request.POST['username'])
		if u.password == request.POST['password']:
			request.session['user'] = request.POST['username']
			return HttpResponseRedirect("/profile/")
		else:	
			return render(request, "home.html", {'error':'Either the username or the password is incorrect', 'form':LoginForm()})
			
		
def profile(request):
	global alert
	u = urlopen('http://www.airnowapi.org/aq/observation/zipCode/current/?format=application/json&zipCode=21030&distance=100&API_KEY=40660235-9B2E-474F-B531-15EAB3B68EE0')
	j = load(u)
	diseases = ["Asthma", "Chronic Bronchitis", "Emphysema", "Coronary Diseases", "Lung Diseases"]
	d = {}
	for obj in j:
		 d[obj['ParameterName']] = obj['AQI']
	currPM, currO = d['PM2.5'], d['O3']	
	u = urlopen('http://agentk.pythonanywhere.com/weather')
	j = load(u)
	a = Affliction.objects.filter(user=request.session['user'])
	minPM, minO, minAQI = 9999, 9999, 9999
	for i in a:
		d = Disease.objects.get(disease=i.disease)
		if minPM > d.pm:
			minPM = d.pm
		if minO > d.ozone:
			minO = d.ozone
	
	if minPM < currPM or minO < currO:
		alert = "Do not step out"
	 
	return render(request, "profile.html", {'user':request.session['user'], 'aqis':d, 'weather':j[j.keys()[-1]], 'pm':obj['AQI'], 'alert':alert, 'diseases':diseases})
	
def register(request):
	for key in request.GET.keys():
		try:
			Affliction(user=request.session['user'], disease=key).save()
		except:
			pass
	return HttpResponseRedirect("/profile/")

@api_view(['GET'])	
def afflictions(request):
	afflictions = Affliction.objects.filter(user=request.session['user'])
	serializer = AfflictionSerializer(afflictions, many=True)
	return Response(serializer.data)
		
@api_view(['GET'])		
def diseases(request):
	diseases = Disease.objects.all()
	serializer = DiseaseSerializer(diseases, many=True)
	return Response(serializer.data)
		
		
		
		
		
		
		
		
		
		
		
		
